name: Test & Publish Packages

on:
  push:
    branches: [main]
  pull_request:
    branches: ['*']

jobs:
  Quality:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x, 17.x]
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - uses: YassinEldeeb/has-changed-path@v2
        id: changed-packages
        with:
          paths: packages
    
      - name: Setup PNPM
        if: steps.changed-server.outputs.changed-packages == 'true'
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.23.6

      - name: Simulate CLI build
        if: steps.changed-server.outputs.changed-packages == 'true'
        run: pnpm simulate-dist

      - name: Install dependencies
        if: steps.changed-server.outputs.changed-packages == 'true'
        run: pnpm i --frozen-lockfile

      - name: Run Tests ðŸ§ª
        if: steps.changed-server.outputs.changed-packages == 'true'
        working-directory: ./packages/create-prisma-generator
        run: pnpm test

  Publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [Quality]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org

      - uses: YassinEldeeb/has-changed-path@v2
        id: changed-packages
        with:
          paths: packages

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        if: steps.changed-server.outputs.changed-packages == 'true'
        with:
          version: 6.23.6

      - uses: actions/cache@v2
        if: steps.changed-server.outputs.changed-packages == 'true'
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Simulate CLI build
        if: steps.changed-server.outputs.changed-packages == 'true'
        run: pnpm simulate-dist

      - name: Install deps
        if: steps.changed-server.outputs.changed-packages == 'true'
        run: pnpm i --frozen-lockfile

      - name: Publish ðŸš€
        if: steps.changed-server.outputs.changed-packages == 'true'
        run: |
          GITHUB_TOKEN="${{secrets.GITHUB_TOKEN}}" GIT_COMMITTER_EMAIL="${{secrets.GIT_COMMITTER_EMAIL}}" GIT_COMMITTER_NAME="${{secrets.GIT_COMMITTER_NAME}}" npx ts-node ./scripts/ci/publish.ts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
